name: Dust and Test

on:
  pull_request:

jobs:
  duster:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: "Duster Fix"
        uses: tighten/duster-action@557d11cf6d55a7f7cf6324806c633af0062759eb # v3
        with:
          args: fix

      - uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v6
        id: auto_commit_action
        with:
          commit_message: 🚨 Fix code style
          commit_user_name: GitHub Action
          commit_user_email: actions@github.com

  ci:
    runs-on: ubuntu-latest
    environment: Testing
    needs: duster
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2
        with:
          php-version: 8.2
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install Node Dependencies
        run: npm i

      - name: Add Wire Credentials Loaded From ENV
        run: composer config http-basic.wire-elements-pro.composer.sh ${{ secrets.WIRE_SECRET}}

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        id: tests
        run: |
          # Run PHPUnit and capture its exit code
          ./vendor/bin/phpunit --teamcity > test_output.txt
          # phpunit_exit_code=$?

          # # Extract test counts and format as markdown
          # TOTAL=$(grep -c "##teamcity\[testFinished" test_output.txt)
          # FAILED=$(grep -c "##teamcity\[testFailed" test_output.txt)
          # PASSED=$((TOTAL - FAILED))

          # # Store test results for summary step
          # echo "total=$TOTAL" >> "$GITHUB_OUTPUT"
          # echo "passed=$PASSED" >> "$GITHUB_OUTPUT"
          # echo "failed=$FAILED" >> "$GITHUB_OUTPUT"

      #     # Exit with PHPUnit's original exit code
      #     exit $phpunit_exit_code

      # - name: Add Test Results to Summary
      #   run: |
      #     echo "# Deployment Summary :rocket:" >> $GITHUB_STEP_SUMMARY
      #     echo "" >> $GITHUB_STEP_SUMMARY
      #     echo "## Build & Test Results" >> $GITHUB_STEP_SUMMARY

      #     if [ "${{ steps.tests.outputs.failed }}" = "0" ]; then
      #       echo "- ✅ CI Tests Passed" >> $GITHUB_STEP_SUMMARY
      #     else
      #       echo "- ❌ CI Tests Failed" >> $GITHUB_STEP_SUMMARY
      #     fi

      #     echo "### Test Statistics" >> $GITHUB_STEP_SUMMARY
      #     echo "- Total Tests: \`${{ steps.tests.outputs.total }}\`" >> $GITHUB_STEP_SUMMARY
      #     echo "- ✅ Passed: \`${{ steps.tests.outputs.passed }}\`" >> $GITHUB_STEP_SUMMARY
      #     echo "- ❌ Failed: \`${{ steps.tests.outputs.failed }}\`" >> $GITHUB_STEP_SUMMARY
      #     echo "" >> $GITHUB_STEP_SUMMARY

      #     # Add failed test details if any
      #     if [ "${{ steps.tests.outputs.failed }}" != "0" ]; then
      #       echo "### Failed Tests" >> $GITHUB_STEP_SUMMARY
      #       echo '```' >> $GITHUB_STEP_SUMMARY
      #       grep "##teamcity\[testFailed" test_output.txt | sed 's/##teamcity\[testFailed name='\''//g' | sed 's/'\''.*//' >> $GITHUB_STEP_SUMMARY
      #       echo '```' >> $GITHUB_STEP_SUMMARY
      #     fi
