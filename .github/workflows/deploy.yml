name: deploy

on:
  push:
    branches: [main]

jobs:
  version:
    name: Version
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - name: Get version
        id: get_version
        run: version=$(cat VERSION.txt) >> "$GITHUB_OUTPUT"
      - name: Upload version artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: version
          path: VERSION.txt

  deploy:
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.2"

      - name: Add Wire Credentials Loaded From ENV
        run: composer config http-basic.wire-elements-pro.composer.sh ${{ secrets.WIRE_SECRET}}

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Deploy
        uses: deployphp/action@v1
        env:
          DEPLOYER_USER: ${{ vars.DEPLOYER_USER }}
          DEPLOYER_HOSTNAME: ${{ vars.DEPLOYER_HOSTNAME }}
          DEPLOYER_PATH: ${{ vars.DEPLOYER_PATH }}
          DEPLOYER_APP: ${{ vars.DEPLOYER_APP }}
          DEPLPOYER_REPO: ${{ vars.DEPLOYER_REPO }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_PREFIX: ${{ vars.SENTRY_PREFIX }}
          SENTRY_SERVER: ${{ vars.SENTRY_SERVER }}
          SENTRY_PROJECT_ARRAY: ${{ vars.SENTRY_PROJECT_ARRAY }}
          WIRE_SECRET: ${{ secrets.WIRE_SECRET }}
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          dep: deploy

      - name: Create Sentry release
        uses: getsentry/action-release@v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_URL: ${{ vars.SENTRY_SERVER }}
        with:
          environment: production
          release: ${{ needs.version.outputs.version }}
          release_prefix: ${{ vars.SENTRY_PREFIX }}
          projects: ${{ vars.SENTRY_PROJECT_ARRAY }}
          disable_telemetry: true

      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v5
        id: auto_commit_action
        with:
          commit_message: ":pushpin: Update version"
          commit_options: "--no-verify"
          commit_user_name: GitHub Action
          commit_user_email: actions@github.com
          file_pattern: |
            **/*
            !.github/workflows/*

      - name: Ignore commit in git blame
        if: steps.auto_commit_action.outputs.changes_detected == 'true'
        run: echo ${{ steps.auto_commit_action.outputs.commit_hash }} >> .git-blame-ignore-revs

      - uses: stefanzweifel/git-auto-commit-action@b863ae1933cb653a53c021fe36dbb774e1fb9403 # v5
        with:
          commit_message: ":pushpin: Ignoring version commit in git blame"
          commit_user_name: GitHub Action
          commit_user_email: actions@github.com
