name: deploy

on:
  push:
    branches:
      - main
      - dev

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  duster:
    name: Dust
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: "Duster Fix"
        uses: tighten/duster-action@v3
        with:
          args: fix

      - uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v6
        id: auto_commit_action
        with:
          commit_message: ðŸš¨ Fix code style
          commit_user_name: GitHub Action
          commit_user_email: actions@github.com
  ci:
    name: Test
    runs-on: ubuntu-latest
    environment: Testing
    needs: duster
    if: always() && !failure() && !cancelled()
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2
        with:
          php-version: 8.2
          tools: composer:v2
          coverage: xdebug

      - name: Setup Node
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install Node Dependencies
        run: npm i

      - name: Add Wire Credentials Loaded From ENV
        run: composer config http-basic.wire-elements-pro.composer.sh ${{ secrets.WIRE_SECRET}}

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        run: ./vendor/bin/phpunit

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: ci
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      id-token: write # to enable use of OIDC for npm provenance
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      hash: ${{ steps.get_hash.outputs.hash }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
      - name: Get version
        id: get_version
        run: echo "version=$(cat VERSION.txt)" >> "$GITHUB_OUTPUT"
      - name: Get hash
        id: get_hash
        run: echo "hash=$(git rev-parse --short=6 HEAD)" >> "$GITHUB_OUTPUT"
      - name: Upload version artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: version
          path: VERSION.txt

  deploy-production:
    name: Deploy to Prod
    runs-on: ubuntu-latest
    needs: version
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2
        with:
          php-version: "8.2"

      - name: Add Wire Credentials Loaded From ENV
        run: composer config http-basic.wire-elements-pro.composer.sh ${{ secrets.WIRE_SECRET}}

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Deploy
        uses: deployphp/action@6242095e7207facf115ac4439760356bc52760ac # v1
        env:
          DEPLOYER_USER: ${{ vars.DEPLOYER_USER }}
          DEPLOYER_HOSTNAME: ${{ vars.DEPLOYER_HOSTNAME }}
          DEPLOYER_PATH: ${{ vars.DEPLOYER_PATH }}
          DEPLOYER_APP: ${{ vars.DEPLOYER_APP }}
          DEPLPOYER_REPO: ${{ vars.DEPLOYER_REPO }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_PREFIX: ${{ vars.SENTRY_PREFIX }}
          SENTRY_SERVER: ${{ vars.SENTRY_SERVER }}
          SENTRY_PROJECT_ARRAY: ${{ vars.SENTRY_PROJECT_ARRAY }}
          WIRE_SECRET: ${{ secrets.WIRE_SECRET }}
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          dep: deploy prod

      - name: Create Sentry release
        uses: getsentry/action-release@526942b68292201ac6bbb99b9a0747d4abee354c # v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_URL: ${{ vars.SENTRY_SERVER }}
        with:
          environment: production
          release: ${{ needs.version.outputs.version }}+${{ needs.version.outputs.hash }}
          release_prefix: ${{ vars.SENTRY_PREFIX }}
          projects: ${{ vars.SENTRY_PROJECT_ARRAY }}
          disable_telemetry: true
          ignore_missing: true

      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@778341af668090896ca464160c2def5d1d1a3eb0 # v6
        id: auto_commit_action
        with:
          commit_message: ":pushpin: Update version"
          commit_options: "--no-verify"
          commit_user_name: GitHub Action
          commit_user_email: actions@github.com
          file_pattern: |
            **/*
            !.github/workflows/*

  deploy-dev:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    needs: version
    if: github.ref == 'refs/heads/dev'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2
        with:
          php-version: "8.2"

      - name: Add Wire Credentials Loaded From ENV
        run: composer config http-basic.wire-elements-pro.composer.sh ${{ secrets.WIRE_SECRET}}

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Deploy
        uses: deployphp/action@6242095e7207facf115ac4439760356bc52760ac # v1
        env:
          DEPLOYER_USER: ${{ vars.DEV_DEPLOYER_USER }}
          DEPLOYER_HOSTNAME: ${{ vars.DEV_DEPLOYER_HOSTNAME }}
          DEPLOYER_PATH: ${{ vars.DEV_DEPLOYER_PATH }}
          DEPLOYER_APP: ${{ vars.DEV_DEPLOYER_APP }}
          DEPLPOYER_REPO: ${{ vars.DEPLOYER_REPO }}
          WIRE_SECRET: ${{ secrets.WIRE_SECRET }}
        with:
          private-key: ${{ secrets.PRIVATE_KEY }}
          dep: deploy dev

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - deploy-production
      - version
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Create Sentry release
        uses: getsentry/action-release@526942b68292201ac6bbb99b9a0747d4abee354c # v3
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
          SENTRY_ORG: ${{ vars.SENTRY_ORG }}
          SENTRY_URL: ${{ vars.SENTRY_SERVER }}
        with:
          environment: dev
          release: ${{ needs.version.outputs.version }}+${{ needs.version.outputs.hash }}
          release_prefix: ${{ vars.SENTRY_PREFIX }}
          projects: ${{ vars.SENTRY_PROJECT_ARRAY }}
          disable_telemetry: true
          ignore_missing: true

  sync-branch:
    name: Sync
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs:
      - deploy-production
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          fetch-depth: 0
      - name: Sync Branch
        uses: remarkablemark/sync-branch@6bdd47dc563c19329241d933c9d8038f8bdaaf21 # v1
        with:
          base: dev
          title: ":twisted_rightwards_arrows: Sync back to dev"
          body: |
            This PR is automatically created to sync the main branch back to dev after a production deployment.
